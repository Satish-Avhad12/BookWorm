// <auto-generated />
using System;
using BookWorm_C_.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookWorm_C_.Migrations
{
    [DbContext(typeof(BookWormContext))]
    partial class BookWormContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookWorm_C_.Entities.AttributeMaster", b =>
                {
                    b.Property<long>("AttributeMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AttributeMasterId"));

                    b.Property<string>("AttributeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttributeMasterId");

                    b.ToTable("AttributeMasters");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Beneficiary", b =>
                {
                    b.Property<long>("BeneficiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BeneficiaryId"));

                    b.Property<string>("BenAccNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenAccType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenBankBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Benifsc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Benpan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeneficiaryId");

                    b.ToTable("Beneficiarys");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Cart", b =>
                {
                    b.Property<long>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CartId"));

                    b.Property<long?>("CustomerCustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CartId");

                    b.HasIndex("CustomerCustomerId");

                    b.HasIndex("ProductProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerId"));

                    b.Property<string>("CustomerContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IsPremium")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PremiumDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Genre", b =>
                {
                    b.Property<long>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GenreId"));

                    b.Property<string>("GenreDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.HasKey("GenreId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.InvoiceDetail", b =>
                {
                    b.Property<long>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceDetailId"));

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RentNoOfDays")
                        .HasColumnType("int");

                    b.Property<string>("TranType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.InvoiceTable", b =>
                {
                    b.Property<long>("InvoiceTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceTableId"));

                    b.Property<long?>("CustId")
                        .HasColumnType("bigint");

                    b.Property<double>("InvoiceAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InvoiceTableId");

                    b.HasIndex("CustId");

                    b.ToTable("InvoiceTables");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Language", b =>
                {
                    b.Property<long>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LanguageId"));

                    b.Property<string>("LanguageDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("LanguageId");

                    b.HasIndex("TypeId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.MyShelf", b =>
                {
                    b.Property<long>("MyShelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MyShelfId"));

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IsActive")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("ProductExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("TranType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MyShelfId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("MyShelves");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IsLibrary")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("IsRentable")
                        .HasColumnType("decimal(20,0)");

                    b.Property<double>("MinRentDays")
                        .HasColumnType("float");

                    b.Property<string>("ProductAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductBasePrice")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescriptionLong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescriptionShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductEnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductGenre")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductGenreNavigationGenreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductLang")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductLangNavigationLanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductOffPriceExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ProductOfferPrice")
                        .HasColumnType("float");

                    b.Property<long?>("ProductPublisher")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductPublisherNavigationPublisherId")
                        .HasColumnType("bigint");

                    b.Property<double>("ProductSpCost")
                        .HasColumnType("float");

                    b.Property<string>("Productisbn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RentPerDay")
                        .HasColumnType("float");

                    b.Property<long?>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductGenreNavigationGenreId");

                    b.HasIndex("ProductLangNavigationLanguageId");

                    b.HasIndex("ProductPublisherNavigationPublisherId");

                    b.HasIndex("TypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.ProductAttribute", b =>
                {
                    b.Property<long>("ProductAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductAttributeId"));

                    b.Property<long?>("AttributeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AttributeMastersAttributeMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductAttributeId");

                    b.HasIndex("AttributeMastersAttributeMasterId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.ProductBen", b =>
                {
                    b.Property<long>("ProductBenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductBenId"));

                    b.Property<long?>("ProdBenBenId")
                        .HasColumnType("bigint");

                    b.Property<double>("ProdBenPercentage")
                        .HasColumnType("float");

                    b.Property<long?>("ProdBenProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductBenId");

                    b.HasIndex("ProdBenBenId");

                    b.HasIndex("ProdBenProductId");

                    b.ToTable("ProductBens");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.ProductType", b =>
                {
                    b.Property<long>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductTypeId"));

                    b.Property<string>("TypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Publisher", b =>
                {
                    b.Property<long>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PublisherId"));

                    b.Property<string>("PublisherContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.RoyaltyCalculation", b =>
                {
                    b.Property<long>("RoyaltyCalculationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoyaltyCalculationId"));

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<long?>("BenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<long?>("RoyaltyId")
                        .HasColumnType("bigint");

                    b.Property<double>("RoyaltyOnBasePrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RoycalTrandate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<string>("TranType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoyaltyCalculationId");

                    b.HasIndex("BenId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RoyaltyId");

                    b.ToTable("RoyaltyCalculations");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.UserInfo", b =>
                {
                    b.Property<int>("UserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserInfoId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserInfoId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Cart", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Customer", "CustomerCustomer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerCustomerId");

                    b.HasOne("BookWorm_C_.Entities.Product", "ProductProduct")
                        .WithMany("Carts")
                        .HasForeignKey("ProductProductId");

                    b.Navigation("CustomerCustomer");

                    b.Navigation("ProductProduct");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Genre", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Language", "Language")
                        .WithMany("Genres")
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.InvoiceDetail", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.InvoiceTable", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("BookWorm_C_.Entities.Product", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.InvoiceTable", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Customer", "Cust")
                        .WithMany("InvoiceTables")
                        .HasForeignKey("CustId");

                    b.Navigation("Cust");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Language", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.ProductType", "Type")
                        .WithMany("Languages")
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.MyShelf", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Customer", "Customer")
                        .WithMany("MyShelves")
                        .HasForeignKey("CustomerId");

                    b.HasOne("BookWorm_C_.Entities.Product", "Product")
                        .WithMany("MyShelves")
                        .HasForeignKey("ProductId");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Product", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Genre", "ProductGenreNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ProductGenreNavigationGenreId");

                    b.HasOne("BookWorm_C_.Entities.Language", "ProductLangNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ProductLangNavigationLanguageId");

                    b.HasOne("BookWorm_C_.Entities.Publisher", "ProductPublisherNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ProductPublisherNavigationPublisherId");

                    b.HasOne("BookWorm_C_.Entities.ProductType", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId");

                    b.Navigation("ProductGenreNavigation");

                    b.Navigation("ProductLangNavigation");

                    b.Navigation("ProductPublisherNavigation");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.ProductAttribute", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.AttributeMaster", "AttributeMasters")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeMastersAttributeMasterId");

                    b.HasOne("BookWorm_C_.Entities.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId");

                    b.Navigation("AttributeMasters");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.ProductBen", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Beneficiary", "ProdBenBen")
                        .WithMany("ProductBenMasters")
                        .HasForeignKey("ProdBenBenId");

                    b.HasOne("BookWorm_C_.Entities.Product", "ProdBenProduct")
                        .WithMany("ProductBens")
                        .HasForeignKey("ProdBenProductId");

                    b.Navigation("ProdBenBen");

                    b.Navigation("ProdBenProduct");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.RoyaltyCalculation", b =>
                {
                    b.HasOne("BookWorm_C_.Entities.Beneficiary", "Ben")
                        .WithMany("RoyaltyCalculations")
                        .HasForeignKey("BenId");

                    b.HasOne("BookWorm_C_.Entities.Product", "Product")
                        .WithMany("RoyaltyCalculations")
                        .HasForeignKey("ProductId");

                    b.HasOne("BookWorm_C_.Entities.InvoiceTable", "Royalty")
                        .WithMany("RoyaltyCalculations")
                        .HasForeignKey("RoyaltyId");

                    b.Navigation("Ben");

                    b.Navigation("Product");

                    b.Navigation("Royalty");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.AttributeMaster", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Beneficiary", b =>
                {
                    b.Navigation("ProductBenMasters");

                    b.Navigation("RoyaltyCalculations");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("InvoiceTables");

                    b.Navigation("MyShelves");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Genre", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.InvoiceTable", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("RoyaltyCalculations");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Language", b =>
                {
                    b.Navigation("Genres");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("InvoiceDetails");

                    b.Navigation("MyShelves");

                    b.Navigation("ProductAttributes");

                    b.Navigation("ProductBens");

                    b.Navigation("RoyaltyCalculations");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.ProductType", b =>
                {
                    b.Navigation("Languages");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BookWorm_C_.Entities.Publisher", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
